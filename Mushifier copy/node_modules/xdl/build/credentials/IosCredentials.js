'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getExistingPushKeys = exports.getExistingDistCerts = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

let getExistingDistCerts = exports.getExistingDistCerts = (() => {
  var _ref = _asyncToGenerator(function* (username, appleTeamId) {
    const distCerts = yield getExistingUserCredentials(username, appleTeamId, 'dist-cert');
    return distCerts.map(function ({ usedByApps, userCredentialsId, certId, certP12, certPassword }) {
      const serialNumber = (_IosCodeSigning || _load_IosCodeSigning()).findP12CertSerialNumber(certP12, certPassword);
      let name = `Serial number: ${serialNumber}`;
      if (certId) {
        name = `${name}, Certificate ID: ${certId}`;
      }
      if (usedByApps) {
        name = `Used in apps: ${usedByApps.join(', ')} (${name})`;
      }
      return {
        value: {
          distCertSerialNumber: serialNumber,
          userCredentialsId: String(userCredentialsId)
        },
        name
      };
    });
  });

  return function getExistingDistCerts(_x, _x2) {
    return _ref.apply(this, arguments);
  };
})();

let getExistingPushKeys = exports.getExistingPushKeys = (() => {
  var _ref2 = _asyncToGenerator(function* (username, appleTeamId) {
    const pushKeys = yield getExistingUserCredentials(username, appleTeamId, 'push-key');
    return pushKeys.map(function ({ usedByApps, userCredentialsId, apnsKeyId }) {
      let name = `Key ID: ${apnsKeyId}`;
      if (usedByApps) {
        name = `Used in apps: ${usedByApps.join(', ')} (${name})`;
      }
      return {
        value: {
          userCredentialsId
        },
        name
      };
    });
  });

  return function getExistingPushKeys(_x3, _x4) {
    return _ref2.apply(this, arguments);
  };
})();

let getExistingUserCredentials = (() => {
  var _ref3 = _asyncToGenerator(function* (username, appleTeamId, type) {
    const { err, certs } = yield (_Api || _load_Api()).default.callMethodAsync('getExistingUserCredentials', [], 'post', {
      username,
      appleTeamId,
      type
    });

    if (err) {
      throw new Error('Error getting existing distribution certificates.');
    } else {
      return certs.map(function (_ref4) {
        let { usedByApps, userCredentialsId } = _ref4,
            rest = _objectWithoutProperties(_ref4, ['usedByApps', 'userCredentialsId']);

        return _extends({
          usedByApps: usedByApps && usedByApps.split(';'),
          userCredentialsId: String(userCredentialsId)
        }, rest);
      });
    }
  });

  return function getExistingUserCredentials(_x5, _x6, _x7) {
    return _ref3.apply(this, arguments);
  };
})();

var _Api;

function _load_Api() {
  return _Api = _interopRequireDefault(require('../Api'));
}

var _IosCodeSigning;

function _load_IosCodeSigning() {
  return _IosCodeSigning = _interopRequireWildcard(require('../detach/IosCodeSigning'));
}

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }
//# sourceMappingURL=../__sourcemaps__/credentials/IosCredentials.js.map
