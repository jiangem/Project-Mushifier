{"version":3,"sources":["Web.js"],"names":["async","projectRoot","let","url","await","UrlUtils","constructWebAppUrlAsync","opn","wait","success","e","Logger","global","error","message","openProjectAsync"],"mappings":";;;;;;;;+BAKOA,WAAgCC,WAAhCD,EAA6C;AAClD,QAAI;AACFE,UAAIC,MAAMC,MAAMC,gCAASC,uBAATD,CAAiCJ,WAAjCI,CAAhBH;AACAK,yCAAIJ,GAAJI,EAAS,EAAEC,MAAM,KAAR,EAATD;AACA,aAAO,EAAEE,SAAS,IAAX,EAAiBN,GAAjB,EAAP;AACF,KAJA,CAIE,OAAOO,CAAP,EAAU;AACVC,0CAAOC,MAAPD,CAAcE,KAAdF,CAAqB,kCAAiCD,EAAEI,OAAQ,EAAhEH;AACA,aAAO,EAAEF,SAAS,KAAX,EAAkBI,OAAOH,CAAzB,EAAP;AACF;AACF,G;;kBATsBK,gB;;;;;;;AALtB;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;AACA;AAAA;AAAA","file":"../Web.js","sourcesContent":["import opn from 'opn';\n\nimport Logger from './Logger';\nimport * as UrlUtils from './UrlUtils';\n\nexport async function openProjectAsync(projectRoot) {\n  try {\n    let url = await UrlUtils.constructWebAppUrlAsync(projectRoot);\n    opn(url, { wait: false });\n    return { success: true, url };\n  } catch (e) {\n    Logger.global.error(`Couldn't start project on web: ${e.message}`);\n    return { success: false, error: e };\n  }\n}\n"],"sourceRoot":"/xdl@53.1.4/src"}