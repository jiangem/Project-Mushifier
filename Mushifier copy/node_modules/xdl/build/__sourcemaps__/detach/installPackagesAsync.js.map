{"version":3,"sources":["detach/installPackagesAsync.js"],"names":["async","let","version","await","spawnAsync","stdout","trim","semver","valid","e","yarnExistsAsync","projectDir","packages","options","packageManager","packageLockJsonExists","fs","pathExists","path","join","yarnExists","logger","info","cwd","stdio","installPackagesAsync"],"mappings":";;;;;;;gCAoDAA,aAAiC;AAC/B,QAAI;AACFC,UAAIC,UAAU,CAACC,MAAMC,iDAAW,SAAXA,EAAsB,CAAC,WAAD,CAAtBA,CAAP,EAA6CC,MAA7C,CAAoDC,IAApD,EAAdL;AACA,aAAO,CAAC,CAACM,oCAAOC,KAAPD,CAAaL,OAAbK,CAAT;AACF,KAHA,CAGE,OAAOE,CAAP,EAAU;AACV,aAAO,KAAP;AACF;AACF,G;;kBAPeC,e;;;;;;;AAlDf;AAAA;AAAA;;;;AACA;AAAA;AAAA;;AACA;;;;AACA;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;;;;+BAQeV,WACbW,UADaX,EAEbY,QAFaZ,EAGba,UAAgB,EAHHb,EAIE;AACfC,QAAIa,iBAAiB,KAArBb;AACA,QAAIY,QAAQC,cAAZ,EAA4B;AAC1BA,uBAAiBD,QAAQC,cAAzBA;AACF,KAFA,MAEO;AACL,YAAMC,wBAAiCZ,MAAMa,sCAAGC,UAAHD,CAC3CE,cAAKC,IAALD,CAAUP,UAAVO,EAAsB,mBAAtBA,CAD2CF,CAA7C;AAGA,YAAMI,aAAajB,MAAMO,iBAAzB;AACAI,uBAAiBM,cAAc,CAACL,qBAAfK,GAAuC,MAAvCA,GAAgD,KAAjEN;AACF;;AAEA,QAAIA,kBAAkB,MAAtB,EAA8B;AAC5BO,0CAAOC,IAAPD,CAAa,uCAAbA;AACAlB,YAAMC,iDAAW,SAAXA,EAAsB,CAAC,KAAD,EAAQ,UAAR,EAAoB,GAAGQ,QAAvB,CAAtBR,EAAwD;AAC5DmB,aAAKZ,UADuD;AAE5Da,eAAO;AAFqD,OAAxDpB,CAAND;AAIF,KANA,MAMO;AACLkB,0CAAOC,IAAPD,CAAa,sCAAbA;AACA,UAAI,EAAElB,MAAMa,sCAAGC,UAAHD,CAAcE,cAAKC,IAALD,CAAUP,UAAVO,EAAsB,cAAtBA,CAAdF,CAAR,CAAJ,EAAmE;AACjEb,cAAMC,iDAAW,KAAXA,EAAkB,CAAC,SAAD,EAAY,YAAZ,EAA0B,OAA1B,CAAlBA,EAAsD;AAC1DmB,eAAKZ,UADqD;AAE1Da,iBAAO;AAFmD,SAAtDpB,CAAND;AAIF;AACAA,YAAMC,iDAAW,KAAXA,EAAkB,CAAC,SAAD,EAAY,QAAZ,EAAsB,YAAtB,EAAoC,OAApC,EAA6C,GAAGQ,QAAhD,CAAlBR,EAA6E;AACjFmB,aAAKZ,UAD4E;AAEjFa,eAAO;AAF0E,OAA7EpB,CAAND;AAIF;AACF,G;;WAnC8BsB,oB;;;;SAAAA,oB","file":"../../detach/installPackagesAsync.js","sourcesContent":["// @flow\n\nimport spawnAsync from '@expo/spawn-async';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport semver from 'semver';\n\nimport logger from './Logger';\n\ntype InstallResult = {\n  code: number,\n  command: string,\n  args: Array<string>,\n};\n\nexport default async function installPackagesAsync(\n  projectDir: string,\n  packages: string[],\n  options?: any = {}\n): Promise<void> {\n  let packageManager = 'npm';\n  if (options.packageManager) {\n    packageManager = options.packageManager;\n  } else {\n    const packageLockJsonExists: boolean = await fs.pathExists(\n      path.join(projectDir, 'package-lock.json')\n    );\n    const yarnExists = await yarnExistsAsync();\n    packageManager = yarnExists && !packageLockJsonExists ? 'yarn' : 'npm';\n  }\n\n  if (packageManager == 'yarn') {\n    logger.info(`Installing dependencies using Yarn...`);\n    await spawnAsync('yarnpkg', ['add', '--silent', ...packages], {\n      cwd: projectDir,\n      stdio: 'inherit',\n    });\n  } else {\n    logger.info(`Installing dependencies using npm...`);\n    if (!(await fs.pathExists(path.join(projectDir, 'node_modules')))) {\n      await spawnAsync('npm', ['install', '--loglevel', 'error'], {\n        cwd: projectDir,\n        stdio: 'inherit',\n      });\n    }\n    await spawnAsync('npm', ['install', '--save', '--loglevel', 'error', ...packages], {\n      cwd: projectDir,\n      stdio: 'inherit',\n    });\n  }\n}\n\nasync function yarnExistsAsync() {\n  try {\n    let version = (await spawnAsync('yarnpkg', ['--version'])).stdout.trim();\n    return !!semver.valid(version);\n  } catch (e) {\n    return false;\n  }\n}\n"],"sourceRoot":"/xdl@53.1.4/src"}